name: CDP SonarCloud Scan

on:
  workflow_call:

permissions:
  id-token: write
  contents: read
  pull-requests: write
  packages: read

jobs:
  build:
    name: CDP SonarCloud coverage scan
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Cache dotNet code coverage
        id: cache-sonar-coverage
        uses: actions/cache@v4
        with:
          path: ./.sonar/coverage
          key: ${{ runner.os }}-sonar-coverage
          restore-keys: ${{ runner.os }}-sonar-coverage
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Install dotNet code coverage
        if: steps.cache-sonar-coverage.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/coverage
          dotnet tool update dotnet-coverage --tool-path ./.sonar/coverage
      - name: Build and analyze
        if: github.actor != 'dependabot[bot]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"DEFRA_trade-imports-reporting-api" /o:"defra" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet nuget remove source defra
          dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name defra "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          dotnet build --no-incremental
          ./.sonar/coverage/dotnet-coverage collect "dotnet test tests/Api.Tests" -f xml -o "coverage.xml"
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
